name: Build and Release Tauri App

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    outputs:
      releaseId: ${{ steps.tauri-app.outputs.releaseHtmlUrl }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Export Tauri private key (Unix)
        if: matrix.platform != 'windows-latest'
        run: echo "TAURI_SIGNING_PRIVATE_KEY=${{ secrets.TAURI_PRIVATE_KEY }}" >> $GITHUB_ENV

      - name: Export Tauri private key (Windows)
        if: matrix.platform == 'windows-latest'
        run: echo "TAURI_SIGNING_PRIVATE_KEY=${{ secrets.TAURI_PRIVATE_KEY }}" >> $GITHUB_ENV
        shell: bash

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1 libappindicator3-dev librsvg2-dev patchelf

      - name: Install dependencies
        run: npm install

      - name: Run Tauri packaging script
        run: |
          node package-tauri.js . ./tauri-app

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        id: tauri-app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: "./tauri-app"
          tagName: vaata-mind-v__VERSION__
          releaseName: "Vaata Mind v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: ${{ !startsWith(github.ref, 'refs/tags/v') }}
          tauriScript: "npm run tauri"
          prerelease: false
          includeUpdaterJson: true
          updaterJsonPreferNsis: true
          includeDebug: false
          includeRelease: true

  update-json:
    runs-on: ubuntu-latest
    needs: build-tauri
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure Git
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      - name: Create or checkout update branch
        run: |
          git checkout "update" || git checkout --orphan "update"

      - name: Remove all files
        run: |
          git rm -rf .

      - name: Fetch JSON file
        env:
          RELEASE_ID: ${{needs.build-tauri.outputs.releaseId}}
        run: |
          echo "$RELEASE_ID"
          RELEASE_TAG=$(basename $RELEASE_ID)
          echo "$RELEASE_TAG"
          RELEASE_URL="https://github.com/${{ github.repository }}/releases/download/$RELEASE_TAG/latest.json"
          echo "$RELEASE_URL"
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3.raw" -o latest.json -L "$RELEASE_URL"
          cat latest.json

      - name: Commit and push changes
        run: |
          git add latest.json
          git commit -m "Update latest.json"
          git push -u origin update --force
